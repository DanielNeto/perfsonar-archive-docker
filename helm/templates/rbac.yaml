{{- if .Values.rbac.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "perfsonar-archive-config-es.jobServiceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "perfsonar-archive-config-es.labels" . | nindent 4 }}
  {{- with .Values.configJob.serviceAccountAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "perfsonar-archive-config-es.jobServiceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "perfsonar-archive-config-es.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  # Grant access to specific secrets by resourceName if possible and desired for tighter security
  # For simplicity here, granting access to all secrets in the namespace.
  # The job needs to read admin credentials and potentially user-defined existing secrets.
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "perfsonar-archive-config-es.jobServiceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "perfsonar-archive-config-es.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ include "perfsonar-archive-config-es.jobServiceAccountName" . }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ include "perfsonar-archive-config-es.jobServiceAccountName" . }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}