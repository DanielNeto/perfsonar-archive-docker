# Configuration for connecting to the existing Elasticsearch instance
existingElasticsearch:
  host: "elasticsearch-master.default.svc.cluster.local"
  port: 9200
  scheme: "https"
  # Kubernetes secret in the same namespace containing 'username' and 'password' keys for ES admin
  adminCredentialsSecret: "elasticsearch-admin-credentials"
  # Optional: Kubernetes secret in the same namespace containing 'ca.crt' key for ES CA bundle
  caBundleSecretName: "" # e.g., "elasticsearch-ca-cert"
  # Optional: Skip TLS verification - USE WITH CAUTION
  insecureSkipVerify: false

# Configuration for the perfSONAR users to be created in Elasticsearch
perfsonarUsers:
  logstash:
    username: "pscheduler_logstash"
    roleName: "pscheduler_logstash_role" # Corresponds to files/roles/pscheduler_logstash_role.json
    existingSecretName: ""
    generatePassword:
      enabled: true
      secretName: "{{ .Release.Name }}-ps-logstash-credentials"
      secretKey: "password"
      passwordLength: 16
  reader:
    username: "pscheduler_reader"
    roleName: "pscheduler_reader_role" # Corresponds to files/roles/pscheduler_reader_role.json
    existingSecretName: ""
    generatePassword:
      enabled: true # Set to false if this user is only for mapping existing external users
      secretName: "{{ .Release.Name }}-ps-reader-credentials"
      secretKey: "password"
      passwordLength: 16
  writer:
    username: "pscheduler_writer"
    roleName: "pscheduler_writer_role" # Corresponds to files/roles/pscheduler_writer_role.json
    existingSecretName: ""
    generatePassword:
      enabled: true # Set to false if this user is only for mapping existing external users
      secretName: "{{ .Release.Name }}-ps-writer-credentials"
      secretKey: "password"
      passwordLength: 16

# Configuration for Elasticsearch Role Mappings
# JSON files for Role Mappings should be placed in files/role_mappings/
# Example: files/role_mappings/pscheduler_logstash_mapping.json
# The key (e.g., "logstash_mapping") is for Helm's loop, the mappingName is used in the API.
roleMappings:
  pscheduler_logstash:
    enabled: true
    mappingName: "pscheduler_logstash_mapping"
    fileName: "pscheduler_logstash_mapping.json"
  pscheduler_reader:
    enabled: true
    mappingName: "pscheduler_reader_mapping"
    fileName: "pscheduler_reader_mapping.json"
  pscheduler_writer:
    enabled: true
    mappingName: "pscheduler_writer_mapping"
    fileName: "pscheduler_writer_mapping.json"

# Configuration for Elasticsearch Index Lifecycle Management (ILM) Policies
ilmPolicies:
  pscheduler_default:
    enabled: true
    policyName: "pscheduler_hot_warm_delete_policy" # This name is used in the API call AND in index template
    fileName: "pscheduler_hot_warm_delete_policy.json" # File in files/ilm_policies/

# Configuration for Elasticsearch Component Templates
# JSON files for Component Templates should be placed in files/component_templates/
# These are building blocks for modern (composable) Index Templates.
componentTemplates:
  pscheduler_settings: # Key for Helm loop
    enabled: true
    templateName: "pscheduler_settings_component" # Name in Elasticsearch & filename (minus .json)
    fileName: "pscheduler_settings_component.json"
  pscheduler_mappings:
    enabled: true
    templateName: "pscheduler_mappings_component"
    fileName: "pscheduler_mappings_component.json"

# Configuration for Elasticsearch Index Templates
# For data streams, these should be composable index templates (_index_template)
indexTemplates:
  pscheduler_default:
    enabled: true
    templateName: "pscheduler_default_template" # Name in Elasticsearch & filename (minus .json)
    fileName: "pscheduler_default_template.json

# Image and settings for the configuration job
configJob:
  # Using curlimages/curl as it includes jq and other useful tools by default
  image:
    repository: "curlimages/curl"
    tag: "latest" # Consider pinning to a specific version for stability
  podAnnotations: {}
  # resources:
  #   limits:
  #     cpu: 200m
  #     memory: 256Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi
  backoffLimit: 3
  # Timeout for the job to complete
  activeDeadlineSeconds: 300
  # Annotations for the job's service account
  serviceAccountAnnotations: {}

# Logstash pScheduler pipeline configuration
# This creates a ConfigMap that a separate Logstash deployment can consume.
logstashPschedulerPipeline:
  enabled: true
  configMapName: "{{ .Release.Name }}-logstash-pscheduler-files"
  # Optional: If your Logstash pipeline needs settings (logstash.yml)
  # settingsConfigMapName: "{{ .Release.Name }}-logstash-settings"

# RBAC configuration for the job
rbac:
  create: true
  serviceAccountName: "{{ include \"perfsonar-archive-config-es.fullname\" . }}-job"