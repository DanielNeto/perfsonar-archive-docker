services:

  ## Setup services

  opensearch-init:
    image: "opensearchproject/opensearch:2.18.0"
    profiles: [setup]
    volumes:
      - opensearch-config:/usr/share/opensearch/config
    entrypoint: ["/bin/sh", "-c", "sleep 10"] # Give it time to initialize
    restart: "no"

  logstash-init:
    image: "opensearchproject/logstash-oss-with-opensearch-output-plugin:${LOGSTASH_VERSION}"
    profiles: [setup]
    volumes:
      - logstash-config:/usr/share/logstash/config/
    entrypoint: ["/bin/sh", "-c", "sleep 10"] # Give it time to initialize
    restart: "no"

  dashboards-init:
    image: "opensearchproject/opensearch-dashboards:${OPENSEARCH_VERSION_LONG}"
    profiles: [setup]
    volumes:
      - dashboards-config:/usr/share/opensearch-dashboards/config/
    entrypoint: ["/bin/sh", "-c", "sleep 10"] # Give it time to initialize
    restart: "no"

  preconfiguration:
    image: perfsonar-archive-configuration
    profiles: [setup]
    build:
      context: .
      dockerfile: Dockerfile-configuration
    container_name: preconfiguration
    working_dir: /home
    restart: "no"
    depends_on:
      opensearch-init:
        condition: service_completed_successfully
      logstash-init:
        condition: service_completed_successfully
      dashboards-init:
        condition: service_completed_successfully
    environment:
      - PERFSONAR_VERSION=5.2.0
      - OPENSEARCH_VERSION=2.18
      - OPENSEARCH_VERSION_LONG=2.18.0
    volumes:
      - ./archive/security_tool:/usr/share/opensearch/plugins/opensearch-security/tools
      - perfsonar-logstash:/usr/lib/perfsonar/logstash
      - perfsonar-archive:/usr/lib/perfsonar/archive
      - perfsonar-dashboards:/usr/lib/perfsonar/dashboards
      - opensearch-config:/etc/opensearch
      - logstash-config:/etc/logstash
      - dashboards-config:/etc/opensearch-dashboards
    command: [ "pre" ]
    #command: /bin/bash
    #stdin_open: true
    #tty: true

  opensearch-node-setup:
    image: "opensearchproject/opensearch:${OPENSEARCH_VERSION_LONG}"
    profiles: [setup]
    container_name: opensearch-node-setup
    depends_on:
      preconfiguration:
        condition: service_completed_successfully
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms8g -Xmx8g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0 # required if not using the demo security configuration
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - opensearch-config:/usr/share/opensearch/config
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net

  securityadmin:
    image: "opensearchproject/opensearch:${OPENSEARCH_VERSION_LONG}"
    profiles: [setup]
    container_name: opensearch-securityadmin
    depends_on:
      - opensearch-node-setup
    volumes:
      - opensearch-config:/usr/share/opensearch/config
    entrypoint: ["/bin/bash", "-c", "sleep 30 && /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh -h opensearch-node-setup -cd /usr/share/opensearch/config/opensearch-security/ -icl -nhnv -cacert /usr/share/opensearch/config/root-ca.pem -cert /usr/share/opensearch/config/admin.pem -key /usr/share/opensearch/config/admin-key.pem"]
    networks:
      - opensearch-net

  opensearch-dashboards-setup:
    image: "opensearchproject/opensearch-dashboards:${OPENSEARCH_VERSION_LONG}"
    profiles: [setup]
    container_name: opensearch-dashboards-setup
    depends_on:
      preconfiguration:
        condition: service_completed_successfully
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node-setup:9200"]' # must be a string with no spaces when specified as an environment variable
    volumes:
      - dashboards-config:/usr/share/opensearch-dashboards/config/
    networks:
      - opensearch-net

  postconfiguration:
    image: perfsonar-archive-configuration
    profiles: [setup]
    build:
      context: .
      dockerfile: Dockerfile-configuration
    container_name: postconfiguration
    depends_on:
      securityadmin:
        condition: service_completed_successfully
      opensearch-dashboards-setup:
        condition: service_started
    working_dir: /home
    restart: "no"
    networks:
      - opensearch-net
    environment:
      - PERFSONAR_VERSION=5.2.0
      - OPENSEARCH_VERSION=2.18
      - OPENSEARCH_VERSION_LONG=2.18.0
    volumes:
      - perfsonar-archive:/usr/lib/perfsonar/archive
      - perfsonar-dashboards:/usr/lib/perfsonar/dashboards
      - logstash-config:/etc/logstash
    command: [ "post" ]

  ## Run services

  opensearch-node:
    image: "opensearchproject/opensearch:${OPENSEARCH_VERSION_LONG}"
    profiles: [run]
    container_name: opensearch-node
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms8g -Xmx8g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0 # required if not using the demo security configuration
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - opensearch-config:/usr/share/opensearch/config
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: "opensearchproject/opensearch-dashboards:${OPENSEARCH_VERSION_LONG}"
    profiles: [run]
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node:9200"]' # must be a string with no spaces when specified as an environment variable
    volumes:
      - dashboards-config:/usr/share/opensearch-dashboards/config/
    networks:
      - opensearch-net

  logstash:
    image: "opensearchproject/logstash-oss-with-opensearch-output-plugin:${LOGSTASH_VERSION}"
    profiles: [run]
    container_name: logstash
    environment:
      - MONITORING_ENABLED=False
      - LOG_LEVEL=info
      - RATE_CACHE_MAX_ENTRIES=10000000
      - RATE_CACHE_EXPIRES=600
    ports:
      - 11283:11283
    expose:
      - "11283"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - logstash-config:/usr/share/logstash/config/
      - perfsonar-logstash:/usr/lib/perfsonar/logstash
    networks:
      - opensearch-net
    entrypoint: ["/bin/bash", "-c", "source /usr/lib/perfsonar/logstash/logstash && exec /usr/local/bin/docker-entrypoint"]

volumes:
  perfsonar-logstash:
  perfsonar-archive:
  perfsonar-dashboards:
  opensearch-config:
  logstash-config:
  dashboards-config:
  opensearch-data:

networks:
  opensearch-net: